// we can delete this file

import {
  Card,
  Button,
  Group,
  Box,
  Grid,
  Stack,
  TextInput,
  Textarea,
} from "@mantine/core";
import { DatePicker } from "@mantine/dates";
import Head from "next/head";
import Link from "next/link";
import { useContext, useEffect, useState } from "react";
import { TaskContext } from './taskContext';

export default function AddTask(props: any) {

  const { addTask, tasks } = useContext(TaskContext);
  const [title, setTitle] = useState("")
  const [date, setDate] = useState<Date | null>(null)
  
  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setTitle(event.target.value);
  };

  const handleDateChange = (newDate: Date | null) => {
    setDate(newDate);
  };


  useEffect(() => {
    console.log(tasks);
  }, [tasks]);


  return (
    <>
      <Head>
        <title>When Can We Do</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box className="h-screen bg-white">
        <Box className="w-full h-full flex justify-center content-center flex-wrap">
          <Card
            shadow="sm"
            p="lg"
            radius="md"
            withBorder
            className="w-96 min-h-96 pt-[14px]"
          >
            <Grid columns={7} gutter={0}>
              <Grid.Col span={7} className="text-3xl">
                Add Task
              </Grid.Col>
              <Stack className="mt-2 w-full">
                <TextInput
                  label="Task Name"
                  placeholder='e.g. "Do homework"'
                  value={title}
                  onChange={handleTitleChange}
                  required
                />
                <Textarea
                  label="Task Description"
                  placeholder='e.g. "Complete HCI homework assignment and then start networking HW"'
                  minRows={4}
                />
                <DatePicker
                  allowFreeInput
                  placeholder="Pick date"
                  label="Task Date"
                  onChange={handleDateChange}
                  withAsterisk
                />
              </Stack>
              <Grid.Col span={7}>
                <Group mt="md" position="apart">
                  <Link href="/calendar">
                    <Button color="red">Cancel</Button>
                  </Link>
                  {/* <Button
                    type="submit"
                    variant="gradient"
                    gradient={{ from: "#045DE9", to: "#09C6F9", deg: 35 }}
                    className="color"
                    onClick={saveTask}
                  >
                    Save
                  </Button> */}
                  <SaveButton/>
                </Group>
              </Grid.Col>
            </Grid>
          </Card>
        </Box>
      </Box>
    </>
  );

  function SaveButton() {
    const { addTask, tasks } = useContext(TaskContext);

    const saveTask = () => { 
      const task = {
        title: title,
        date: date,
        completed: false
      };
  
      addTask(task)
      // console.log(tasks)
      props.setShowAddTask(false)
    }

    return <Button onClick={saveTask}>Save</Button>;
  }

}
